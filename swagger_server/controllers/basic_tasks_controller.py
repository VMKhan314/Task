import connexion
import six


from swagger_server.controllers.services import *

from swagger_server.models.error import Error  # noqa: E501
from swagger_server.models.shop_unit import ShopUnit  # noqa: E501
from swagger_server.models.shop_unit_import_request import ShopUnitImportRequest  # noqa: E501
from swagger_server import util

def delete_id_delete(id):  # noqa: E501
    """delete_id_delete

    Удалить элемент по идентификатору. При удалении категории удаляются все дочерние элементы. Доступ к статистике (истории обновлений) удаленного элемента невозможен.  Так как время удаления не передается, при удалении элемента время обновления родителя изменять не нужно.  **Обратите, пожалуйста, внимание на этот обработчик. При его некорректной работе тестирование может быть невозможно.**  # noqa: E501

    :param id: Идентификатор
    :type id: 

    :rtype: None
    """

    if  database.delete_objects(id):
        return 'OK'

    return (Error(404,'Item not found'), 404)


def imports_post(body=None):  # noqa: E501
    """imports_post

    Импортирует новые товары и/или категории. Товары/категории импортированные повторно обновляют текущие.
    Изменение типа элемента с товара на категорию или с категории на товар не допускается.
    Порядок элементов в запросе является произвольным.
    - uuid товара или категории является уникальным среди товаров и категорий
    - родителем товара или категории может быть только категория
    - принадлежность к категории определяется полем parentId
    - товар или категория могут не иметь родителя (при обновлении parentId на null, элемент остается без родителя)
    - название элемента не может быть null   - у категорий поле price должно содержать null
    - цена товара не может быть null и должна быть больше либо равна нулю.
    - при обновлении товара/категории обновленными считаются **все** их параметры
    - при обновлении параметров элемента обязательно обновляется поле **date** в соответствии с временем обновления
    - в одном запросе не может быть двух элементов с одинаковым id   - дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI).
    Если дата не удовлетворяет данному формату, необходимо отвечать 400.
    Гарантируется, что во входных данных нет циклических зависимостей и поле updateDate монотонно возрастает.
    Гарантируется, что при проверке передаваемое время кратно секундам.  # noqa: E501

    :param body: 
    :type body: dict | bytes

    :rtype: None
    """

    if connexion.request.is_json:
        body = ShopUnitImportRequest.from_dict(connexion.request.get_json())  # noqa: E501

        database.import_objects(body)
    return ''


def nodes_id_get(id):  # noqa: E501
    """nodes_id_get

    Получить информацию об элементе по идентификатору. При получении информации о категории также предоставляется информация о её дочерних элементах.
    - для пустой категории поле children равно пустому массиву, а для товара равно null
    - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий.
    Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.  # noqa: E501

    :param id: Идентификатор элемента
    :type id: 

    :rtype: ShopUnit
    """

    res = database.node_objects(id)
    if res!= None:
        return res
    return (Error(404, 'Item not found'), 404)


