openapi: 3.0.0
info:
  title: Mega Market Open API
  description: Вступительное задание в Летнюю Школу Бэкенд Разработки Яндекса 2022
  version: "1.0"
servers:
- url: /
paths:
  /imports:
    post:
      tags:
      - Basic_Tasks
      description: |
        Импортирует новые товары и/или категории. Товары/категории импортированные повторно обновляют текущие. Изменение типа элемента с товара на категорию или с категории на товар не допускается. Порядок элементов в запросе является произвольным.

          - uuid товара или категории является уникальным среди товаров и категорий
          - родителем товара или категории может быть только категория
          - принадлежность к категории определяется полем parentId
          - товар или категория могут не иметь родителя (при обновлении parentId на null, элемент остается без родителя)
          - название элемента не может быть null
          - у категорий поле price должно содержать null
          - цена товара не может быть null и должна быть больше либо равна нулю.
          - при обновлении товара/категории обновленными считаются **все** их параметры
          - при обновлении параметров элемента обязательно обновляется поле **date** в соответствии с временем обновления
          - в одном запросе не может быть двух элементов с одинаковым id
          - дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI). Если дата не удовлетворяет данному формату, необходимо отвечать 400.

        Гарантируется, что во входных данных нет циклических зависимостей и поле updateDate монотонно возрастает. Гарантируется, что при проверке передаваемое время кратно секундам.
      operationId: imports_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopUnitImportRequest'
      responses:
        "200":
          description: Вставка или обновление прошли успешно.
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
      x-openapi-router-controller: swagger_server.controllers.basic_tasks_controller
  /delete/{id}:
    delete:
      tags:
      - Basic_Tasks
      description: |
        Удалить элемент по идентификатору. При удалении категории удаляются все дочерние элементы. Доступ к статистике (истории обновлений) удаленного элемента невозможен.

        Так как время удаления не передается, при удалении элемента время обновления родителя изменять не нужно.

        **Обратите, пожалуйста, внимание на этот обработчик. При его некорректной работе тестирование может быть невозможно.**
      operationId: delete_id_delete
      parameters:
      - name: id
        in: path
        description: Идентификатор
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
      responses:
        "200":
          description: Удаление прошло успешно.
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Категория/товар не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
      x-openapi-router-controller: swagger_server.controllers.basic_tasks_controller
  /nodes/{id}:
    get:
      tags:
      - Basic_Tasks
      description: |
        Получить информацию об элементе по идентификатору. При получении информации о категории также предоставляется информация о её дочерних элементах.

        - для пустой категории поле children равно пустому массиву, а для товара равно null
        - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий. Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
      operationId: nodes_id_get
      parameters:
      - name: id
        in: path
        description: Идентификатор элемента
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
      responses:
        "200":
          description: Информация об элементе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnit'
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Категория/товар не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
      x-openapi-router-controller: swagger_server.controllers.basic_tasks_controller
  /sales:
    get:
      tags:
      - Addition_Tasks
      description: |
        Получение списка **товаров**, цена которых была обновлена за последние 24 часа включительно [now() - 24h, now()] от времени переданном в запросе. Обновление цены не означает её изменение. Обновления цен удаленных товаров недоступны. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
      operationId: sales_get
      parameters:
      - name: date
        in: query
        description: "Дата и время запроса. Дата должна обрабатываться согласно ISO\
          \ 8601 (такой придерживается OpenAPI). Если дата не удовлетворяет данном\
          у формату, необходимо отвечать 400"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2022-05-28T21:12:01.000Z
      responses:
        "200":
          description: "Список товаров, цена которых была обновлена."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnitStatisticResponse'
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
      x-openapi-router-controller: swagger_server.controllers.addition_tasks_controller
  /node/{id}/statistic:
    get:
      tags:
      - Addition_Tasks
      description: |
        Получение статистики (истории обновлений) по товару/категории за заданный полуинтервал [from, to). Статистика по удаленным элементам недоступна.

        - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий.Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
        - можно получить статистику за всё время.
      operationId: node_id_statistic_get
      parameters:
      - name: id
        in: path
        description: UUID товара/категории для которой будет отображаться статистика
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
      - name: dateStart
        in: query
        description: "Дата и время начала интервала, для которого считается статис\
          тика. Дата должна обрабатываться согласно ISO 8601 (такой придерживается\
          \ OpenAPI). Если дата не удовлетворяет данному формату, необходимо отвеч\
          ать 400."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2022-05-28T21:12:01.000Z
      - name: dateEnd
        in: query
        description: "Дата и время конца интервала, для которого считается статист\
          ика. Дата должна обрабатываться согласно ISO 8601 (такой придерживается\
          \ OpenAPI). Если дата не удовлетворяет данному формату, необходимо отвеч\
          ать 400."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2022-05-28T21:12:01.000Z
      responses:
        "200":
          description: Статистика по элементу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnitStatisticResponse'
        "400":
          description: Некорректный формат запроса или некорректные даты интервала.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Категория/товар не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
      x-openapi-router-controller: swagger_server.controllers.addition_tasks_controller
components:
  schemas:
    ShopUnitType:
      type: string
      description: Тип элемента - категория или товар
      enum:
      - OFFER
      - CATEGORY
    ShopUnit:
      required:
      - date
      - id
      - name
      - type
      - children
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентфикатор
          format: uuid
          nullable: false
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        name:
          type: string
          description: Имя категории
          nullable: false
        date:
          type: string
          description: Время последнего обновления элемента.
          nullable: false
          example: 2022-05-28T21:12:01.000Z
        parentId:
          type: string
          description: UUID родительской категории
          format: uuid
          nullable: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          type: integer
          description: "Целое число, для категории - это средняя цена всех дочерни\
            х товаров(включая товары подкатегорий). Если цена является не целым чи\
            слом, округляется в меньшую сторону до целого числа. Если категория не\
            \ содержит товаров цена равна null."
          format: int64
          nullable: true
        children:
          nullable: true
          type: array
          description: Список всех дочерних товаров\категорий. Для товаров поле равно
            null.
          items:
            $ref: '#/components/schemas/ShopUnit'
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a111
        name: Категория
        type: CATEGORY
        date: 2022-05-28T21:12:01.000Z
        price: 6
        children:
        - name: Оффер 1
          id: 3fa85f64-5717-4562-b3fc-2c963f66a222
          price: 4
          date: 2022-05-28T21:12:01.000Z
          type: OFFER
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a111
        - name: Подкатегория
          type: CATEGORY
          id: 3fa85f64-5717-4562-b3fc-2c963f66a333
          date: 2022-05-26T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a111
          price: 8
          children:
          - name: Оффер 2
            id: 3fa85f64-5717-4562-b3fc-2c963f66a444
            parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
            date: 2022-05-26T21:12:01.000Z
            price: 8
            type: OFFER
            children: None
    ShopUnitImport:
      required:
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентфикатор
          format: uuid
          nullable: false
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        name:
          type: string
          description: Имя элемента.
          nullable: false
        parentId:
          type: string
          description: UUID родительской категории
          format: uuid
          nullable: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          type: integer
          description: "Целое число, для категорий поле должно содержать null."
          format: int64
          nullable: true
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a444
        name: Оффер
        parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
        price: 234
        type: OFFER
    ShopUnitImportRequest:
      type: object
      properties:
        items:
          type: array
          description: Импортируемые элементы
          nullable: false
          items:
            $ref: '#/components/schemas/ShopUnitImport'
        updateDate:
          type: string
          description: Время обновления добавляемых товаров/категорий.
          nullable: false
          example: 2022-05-28T21:12:01.000Z
    ShopUnitStatisticUnit:
      required:
      - date
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентфикатор
          format: uuid
          nullable: false
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        name:
          type: string
          description: Имя элемента
          nullable: false
        parentId:
          type: string
          description: UUID родительской категории
          format: uuid
          nullable: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          type: integer
          description: "Целое число, для категории - это средняя цена всех дочерни\
            х товаров(включая товары подкатегорий). Если цена является не целым чи\
            слом, округляется в меньшую сторону до целого числа. Если категория не\
            \ содержит товаров цена равна null."
          format: int64
          nullable: true
        date:
          type: string
          description: Время последнего обновления элемента.
          nullable: false
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a444
        name: Оффер
        date: 2022-05-28T21:12:01.000Z
        parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
        price: 234
        type: OFFER
    ShopUnitStatisticResponse:
      type: object
      properties:
        items:
          type: array
          description: История в произвольном порядке.
          items:
            $ref: '#/components/schemas/ShopUnitStatisticUnit'
      example:
        items:
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          date: 2022-05-28T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          date: 2022-05-28T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          nullable: false
        message:
          type: string
          nullable: false

